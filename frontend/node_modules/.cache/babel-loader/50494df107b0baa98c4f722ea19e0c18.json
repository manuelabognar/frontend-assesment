{"ast":null,"code":"var _jsxFileName = \"/home/bognar/\\xC1rea de Trabalho/t10101010/frontend-assesment/frontend/src/pages/DeckNew/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles.css';\nimport './modal.css';\n\nfunction NewDeck() {\n  const history = useHistory();\n  const [availableCards, setAvailableCards] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [rotationCard, setRotationCard] = useState(0); // Esconde a carta de rotacao, que esta inicialmente com valor 0\n\n  useEffect(() => {\n    document.getElementById('rotationCard').hidden = true;\n  }, []); // Chamada a API, cria um novo deck\n\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'https://deckofcardsapi.com/api/deck/new/'\n    }).then(response => {\n      // salvo localmente no storage o deck_id da resposta \n      localStorage.setItem('deck_id_temp', response.data.deck_id);\n    });\n  }, []); // Chamada a API, busca a imagem das cartas, assim como o código dela\n\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: `https://deckofcardsapi.com/api/deck/${localStorage.getItem('deck_id_temp')}/draw/?count=52`\n    }).then(response => {\n      // salvo a resposta em availableCards\n      const cardResponse = response.data.cards.map(card => card);\n      setAvailableCards(cardResponse);\n    });\n  }, []);\n\n  function handleAddCard(addCard, code) {\n    // se a carta de rotacao foi selecionada\n    if (rotationCard === 1) {\n      // salvo a carta de rotacao\n      setRotationCard(addCard); // remover do availablecards\n\n      setAvailableCards(availableCards.filter(card => card.code !== code)); // escodo o botao de add carta de rotacao \n\n      document.getElementById('addRotationCard').hidden = true; // mostro a carta de rotacao\n\n      document.getElementById('rotationCard').hidden = false; // fecha o modal\n\n      document.getElementById(\"modal-toggle\").checked = false; // se o deck foi selecionado\n    } else {\n      // add ao deckCards\n      setSelectedCards([...selectedCards, addCard]); // remover do availablecards\n\n      setAvailableCards(availableCards.filter(card => card.code !== code)); // se ja foram selecionadas 10 cartas\n\n      if (selectedCards.length >= 9) {\n        // esconde o botao para add \n        document.getElementById('addCard').hidden = true;\n      } // fecha o modal\n\n\n      document.getElementById(\"modal-toggle\").checked = false;\n    }\n  }\n\n  function handleRotationCard() {\n    // seto a carta de rotacao como selecionada\n    setRotationCard(1); // abro o modal para selecionar a carta\n\n    document.getElementById(\"modal-toggle\").checked = true;\n  }\n\n  async function handleSubimit(e) {\n    e.preventDefault();\n\n    if (rotationCard === 0) {\n      alert('Please select a rotation card');\n    } else if (selectedCards.length === 0) {\n      alert('Please add some cards to your deck first'); // se está tudo bem, então continuamos para a próxima rota\n    } else {\n      //console.log(rotationCard);\n      await axios({\n        method: 'get',\n        url: `https://deckofcardsapi.com/api/deck/new/shuffle/?cards=${selectedCards.map(card => card.code)}`\n      }).then(response => {\n        //console.log(response.data)\n        localStorage.setItem('deck_id', response.data.deck_id);\n      });\n      history.push(`/deck/${localStorage.getItem('deck_id')}`);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"modal-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"modal-backdrop\",\n    htmlFor: \"modal-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"modal-close-btn\",\n    htmlFor: \"modal-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"50\",\n    height: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"15\",\n    y1: \"15\",\n    x2: \"35\",\n    y2: \"35\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"35\",\n    y1: \"15\",\n    x2: \"15\",\n    y2: \"35\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 10\n    }\n  }, \" Select your card \"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, availableCards.map(card => /*#__PURE__*/React.createElement(\"li\", {\n    key: card.code,\n    onClick: () => handleAddCard(card, card.code),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: card.image,\n    alt: card.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubimit,\n    className: \"newdeck-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, \"Cards\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, selectedCards.map((card, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: card.code,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \" card \", index + 1, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n    src: card.image,\n    alt: card.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"card\",\n    id: \"addCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Add card\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"modal-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"+\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Rotation card\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"card\",\n    id: \"rotationCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: rotationCard.image,\n    alt: rotationCard.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"card\",\n    id: \"addRotationCard\",\n    onClick: handleRotationCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"+\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, \"Submit\")));\n}\n\nexport default NewDeck;","map":{"version":3,"sources":["/home/bognar/Área de Trabalho/t10101010/frontend-assesment/frontend/src/pages/DeckNew/index.js"],"names":["React","useState","useEffect","useHistory","axios","NewDeck","history","availableCards","setAvailableCards","selectedCards","setSelectedCards","rotationCard","setRotationCard","document","getElementById","hidden","method","url","then","response","localStorage","setItem","data","deck_id","getItem","cardResponse","cards","map","card","handleAddCard","addCard","code","filter","checked","length","handleRotationCard","handleSubimit","e","preventDefault","alert","push","image","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './styles.css';\nimport './modal.css';\n\nfunction NewDeck() {\n  const history = useHistory();\n\n  const [availableCards, setAvailableCards] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [rotationCard, setRotationCard] = useState(0);\n\n\n  // Esconde a carta de rotacao, que esta inicialmente com valor 0\n  useEffect(() => {\n    document.getElementById('rotationCard').hidden = true;\n  }, []);\n\n\n  // Chamada a API, cria um novo deck\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'https://deckofcardsapi.com/api/deck/new/',\n    })\n    .then (response => {\n      // salvo localmente no storage o deck_id da resposta \n      localStorage.setItem('deck_id_temp', response.data.deck_id);\n    });\n  },[]);\n\n\n  // Chamada a API, busca a imagem das cartas, assim como o código dela\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: `https://deckofcardsapi.com/api/deck/${localStorage.getItem('deck_id_temp')}/draw/?count=52`,\n    })\n    .then (response => {\n      // salvo a resposta em availableCards\n      const cardResponse = response.data.cards.map(card => card);\n      setAvailableCards(cardResponse);\n    });\n  },[]);\n\n\n\n\n  function handleAddCard (addCard, code) {\n\n    // se a carta de rotacao foi selecionada\n    if (rotationCard === 1) {\n\n      // salvo a carta de rotacao\n      setRotationCard(addCard);\n\n      // remover do availablecards\n      setAvailableCards(availableCards.filter(card => card.code !== code));\n      \n      // escodo o botao de add carta de rotacao \n      document.getElementById('addRotationCard').hidden = true;\n\n      // mostro a carta de rotacao\n      document.getElementById('rotationCard').hidden = false;\n\n      // fecha o modal\n      document.getElementById(\"modal-toggle\").checked = false;\n    \n\n      // se o deck foi selecionado\n    } else {\n\n      // add ao deckCards\n      setSelectedCards([...selectedCards, addCard]);\n      \n      // remover do availablecards\n      setAvailableCards(availableCards.filter(card => card.code !== code));\n\n      // se ja foram selecionadas 10 cartas\n      if (selectedCards.length >= 9) {\n        // esconde o botao para add \n        document.getElementById('addCard').hidden = true;\n      }\n\n      // fecha o modal\n      document.getElementById(\"modal-toggle\").checked = false;\n\n    }\n  }\n\n\n\n  function handleRotationCard() {\n    // seto a carta de rotacao como selecionada\n    setRotationCard(1);\n\n    // abro o modal para selecionar a carta\n    document.getElementById(\"modal-toggle\").checked = true;\n  }\n\n\n  async function handleSubimit (e) {\n    e.preventDefault();\n\n    if (rotationCard === 0) {\n      alert('Please select a rotation card');\n    } \n    \n    else if (selectedCards.length === 0) {\n      alert ('Please add some cards to your deck first');\n\n    // se está tudo bem, então continuamos para a próxima rota\n    } else {\n      //console.log(rotationCard);\n    \n      \n    await axios({\n      method: 'get',\n      url: `https://deckofcardsapi.com/api/deck/new/shuffle/?cards=${selectedCards.map(card => card.code)}`,\n    })\n    .then (response => {\n      //console.log(response.data)\n      localStorage.setItem('deck_id', response.data.deck_id);\n    });\n\n\n    history.push(`/deck/${localStorage.getItem('deck_id')}`);\n    }\n  }\n\n\n  return (\n    <div> \n\n\n      <div className=\"modal-container\">\n        <input type=\"checkbox\" id=\"modal-toggle\" />\n        <label className=\"modal-backdrop\" htmlFor=\"modal-toggle\"></label>\n    \n        <div className=\"modal-content\">\n          <label className=\"modal-close-btn\" htmlFor=\"modal-toggle\">\n          <svg width=\"50\" height=\"50\">\n        \t\t<line x1=\"15\" y1=\"15\" x2=\"35\" y2=\"35\"/>\n\t\t\t      <line x1=\"35\" y1=\"15\" x2=\"15\" y2=\"35\"/>\n\t\t      </svg>\n\t        </label>\n\t        <p> Select your card </p> \n          <ul className=\"cards\">\n            {availableCards.map(card => (\n              <li key={card.code} onClick={() => handleAddCard(card, card.code)}>              \n                <img src={card.image} alt={card.code}  />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n\n\n\n    <form onSubmit={handleSubimit} className=\"newdeck-container\">\n\n      <h1>Cards</h1>\n\n      <ul className=\"cards\">\n        {selectedCards.map((card, index )=> (\n          <li key={card.code} className=\"card\">              \n            <span> card {index+1} </span>\n            <img src={card.image} alt={card.code} />\n          </li>\n        ))}\n\n  \n        <li className=\"card\" id=\"addCard\">          \n          <span>Add card</span>    \n          <label htmlFor=\"modal-toggle\">+</label>\n        </li>\n      </ul>\n\n  \n\n      <h2>Rotation card</h2>\n\n      <ul>\n        <li className=\"card\" id=\"rotationCard\" >          \n          <img src={rotationCard.image} alt={rotationCard.code} />\n        </li>\n\n        <li className=\"card\" id=\"addRotationCard\" onClick={handleRotationCard}>             \n          <label>+</label>\n        </li>\n      </ul>\n\n      \n      <button type=\"submit\" className=\"button\">Submit</button>\n\n    </form>\n    </div>\n  );\n}\n\nexport default NewDeck;"]},"metadata":{},"sourceType":"module"}